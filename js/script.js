$("document").ready((function(){function e(){$(window).width()<992?$(".header .contacts__phone").appendTo(".header-left"):$(window).width()>992&&$(".header .contacts__phone").prependTo(".header__contacts")}$(window).resize((function(){e()})),e()}));const triggered_select=$(".block, .card__btn");let triggered_blocks=localStorage.getItem("triggered_blocks")?JSON.parse(localStorage.getItem("triggered_blocks")):[];function initBlocks(e){e.filter((function(e,t){if(-1!=triggered_blocks.indexOf($(t).data("slide")))return t})).each((function(){$(this).addClass("active"),$(this).find(".block__icon img").attr("src",$(this).find(".block__icon img").attr("src").replace(/\./g,"_active."))})),e.filter((function(e,t){if(-1==triggered_blocks.indexOf($(t).data("slide")))return t})).each((function(){$(this).removeClass("active"),$(this).find(".block__icon img").attr("src",$(this).find(".block__icon img").attr("src").replace(/_active/g,""))}));$(".submit-application-select__title > span").text($(".block.active").length)}triggered_select.click((function(){let e=$(this),t=e.data("slide");if(-1==$.inArray(t,triggered_blocks))triggered_blocks.push(t);else{if(0==e.hasClass("block"))return;triggered_blocks=$.grep(triggered_blocks,(function(e){return e!=t}))}localStorage.setItem("triggered_blocks",JSON.stringify(triggered_blocks)),initBlocks($(`.block[data-slide="${t}"]`))})),initBlocks($(".block")),$(".card").each((function(){let e=$(this).find(".gallery__image img"),t=e[Math.floor(Math.random()*e.length)].src;$(this).css("background-image",`url("${t}")`)}));let images=$(".gallery__image");function progressBar(){$(window).scrollTop(),$(window).height();let e=$(window).height(),t=$(document).height()-e,i=$(window).scrollTop()/t*100,o=$(".header__cover").height()/t*100;if(i<o){let e=(100-o+o-2*i)/100;if(e>.85)return;$(".header__cover").css("opacity",e)}}function throttle(e,t,i){let o=localStorage.getItem(`time-${i}`)?localStorage.getItem(`time-${i}`):void 0;return function(...s){null==o&&(o=$.now(),localStorage.setItem(`time-${i}`,o),e(...s)),$.now()-o>t?(o=$.now(),localStorage.setItem(`time-${i}`,o),e(...s)):getAlert_error(`Подождите еще ${(t/1e3-($.now()-o)/1e3).toFixed(0)} секунд!`)}}function getAlert_succ(e){Swal.fire({position:"top-end",icon:"success",title:e,padding:"2em",width:"100%",color:"#232122",background:"#EAEAEA",showConfirmButton:!1,timer:3500,toast:!0})}function getAlert_error(e){Swal.fire({position:"top-end",icon:"error",title:e,padding:"2em",width:"100%",color:"red",background:"#EAEAEA",showConfirmButton:!1,timer:3500,toast:!0})}images.mouseover((function(){let e=$(this),t=$(this).find("img").attr("src");e.parents(".card").css("background-image",`url("${t}")`)})),$("[data-fancybox]").fancybox({}),$(window).scroll(progressBar),$('a[href^="#"]').on("click",(function(e){e.preventDefault();var t,i=$(this.hash);i.length&&(t=$(window).width()<768?120:220,$("html, body").animate({scrollTop:i.offset().top-t},400))})),$(window).on("touchmove",(function(){$('a[href^="#"]').data("clicked",!1)})),$(document).on("touchend",'a[href^="#"]',(function(e){$(this).data("clicked")&&(e.preventDefault(),$(this).data("clicked",!1))}));const sticky=$(".carousel-services-dots"),stickyTopDefault=sticky.offset().top;let cards_pos=[];function get_posCards(){$(".card").each((function(){cards_pos.push({card:$(this),pos:$(this).offset().top})}))}get_posCards(),$(window).resize(get_posCards),$(window).scroll((function(){let e=$(document).scrollTop(),t=sticky.offset().top;e>=stickyTopDefault&&($(".carousel-services-dots").addClass("fixed"),$(cards_pos).each((function(){if($(this)[0].pos<t){var e=$(this)[0].card.css("background-image");e=e.replace("url(","").replace(")","").replace(/\"/gi,"");var i=$(this)[0].card.data("slide");sticky.css("background-image",`url(${e})`),$(`.carousel-services-dot[data-slide='${i}']`).addClass("active")}}))),e<stickyTopDefault&&($(".carousel-services-dots").removeClass("fixed"),sticky.css("background-image",""))}));let owl_servcies=$(".owl-carousel--services").owlCarousel({slideSpeed:300,paginationSpeed:400,center:!0,stopOnHover:!0,autoplay:100,loop:!0,margin:50});$(".carousel-services-dot").click((function(){owl_servcies.trigger("to.owl.carousel",[$(this).index(),300])})),$(".carousel-services__next").click((function(){owl_servcies.trigger("next.owl.carousel",[300])})),$(".carousel-services__prev").click((function(){owl_servcies.trigger("prev.owl.carousel",[300])})),$(".carousel-services-dot").click((function(e,t){$(".carousel-services-dots").hasClass("fixed")&&$("html, body").animate({scrollTop:$(`.card__btn[data-slide='${$(this).data("slide")}']`).parents(".card").offset().top},1e3)})),$(".card__btn").click((function(e){$(this).siblings(".card__title").text();$.fancybox.open({src:".submit-application",type:"inline",autoSize:!0})})),$(".submit-application-form").validate({rules:{phone:{required:!0},name:{required:!0}},messages:{phone:{required:"Введите номер телефона!"},name:{required:"Введите имя!"}},submitHandler:function(e){throttle((function(){let e=[];$(".block.active .block__title").each((function(){e.push($(this).text())})),$.ajax({url:"/php/submit-application.php",type:"post",data:{phone:$('.submit-application-form input[name="phone"]').val(),name:$('.submit-application-form input[name="name"]').val(),review:$('.submit-application-form textarea[name="review"').val(),selected:JSON.stringify(e)},success:function(e){getAlert_succ("Заявка успешно отправлена! Ожидайте ответа!")}})}),18e4,"submit-application")()}}),$.validator.addMethod("phone",(function(e,t){return this.optional(t)||/^\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}$/.test(e)}),"Номер введен некорректно!");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
